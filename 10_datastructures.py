# -*- coding: utf-8 -*-
"""10_datastructures.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xYpGOPxYi9HVZAAh2xaquKbKaKpL8hHH
"""

# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All"
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session

#1
lst=[1,2,3,4,5,5,55,6,7,7,88]
lst=set(lst)
lst=list(lst)
print(lst)

#1
lst=[1,2,3,4,5,5,55,6,7,7,88]
temp=0
for i in lst:
    if i==temp:
        lst.remove(i)
    temp=i
print(sorted(lst))

#2
tup=(111,2,3,4,5,645,646,234,45,42)
print(max(tup))
print(min(tup))

#2
tup=(12,2,3,4,5,645,646,234,45,42)
temp=tup[0]
for i in range(10):
    if tup[i]>temp:
        temp=tup[i]
        max=temp
print(f"{max}")
for i in range(10):
    if tup[i]<temp:
        temp=tup[i]
        min=temp
print(min)

#3
llst=[i for i in range(100)]
new_list=[x for x in llst if x%2==0]
print(new_list)

#4
strr=input("enter the string: ").lower()
count_dict={}
for i in strr:
    if i in count_dict:
        count_dict[i]+=1
    else:
        count_dict[i]=1

print(count_dict)

# 5. Create a set of prime numbers less than 50. Write a program to check
#    whether a given number exists in the set or not.
prime_list=[]
for i in range(2,50):
    for j in range(2,i):
        if i%j==0:
            break
    else:
        prime_list.append(i)

prime_set=set(prime_list)
# print(prime_set)
check_number=int(input("enter the number to check: "))
if check_number in prime_set:
    print(f"{check_number} is a prime number")
else:
    print(f"{check_number} is not a prime number")

#6. Given two lists, write a program to find their intersection using sets.
lst1=[i for i in range(10)]
lst2=[i for i in range(10) if i%2==0]
set1=set(lst1)
set2=set(lst2)

inter_set=set1 & set2
print(inter_set)

#7. Write a Python program to merge two dictionaries and sum the values of
#   common keys.
dict1 = {"math": 80, "science": 78, "social": 69, "english": 50}
dict2 = {"math": 85, "python": 78, "social": 67, "english": 76}
new_dict = {}

for key in dict1:
    new_dict[key] = dict1[key]

for key in dict2:
    if key in new_dict:
        new_dict[key] += dict2[key]
    else:
        new_dict[key] = dict2[key]

print(new_dict)

#8. Given a list of names, write a program to count how many times each name
#   appears using a dictionary.
name_list=["sajan","kartik","manish","sajan","manoj","sajan","manish"]
count_dict={}
for name in name_list:
    if name in count_dict:
        count_dict[name]+=1
    else:
        count_dict[name]=1

print(count_dict)

##### 10. Write a program to input key-value pairs from the user and store them in a
#    dictionary. Allow the user to search for a key and display its value
subject_dict={}
for i in range(100):
    subject=input("enter the subject: ").upper()
    value=int(input(f"enter {subject}'s mark: "))
    subject_dict[subject]=value
    choice= input("enter the choice to add more type 'y' or 'n' for exit6: ").lower()
    if choice=="y":
        pass
    elif choice=="n":
        break
    else:
        sub = input("enter subjet to find marks: ").upper()
        print(subject_dict[sub])

#9. Write a Python program to remove elements from a list that are also present
#   in another list.

lst3=[1,2,3,4,5,6,7,8,9]
lst4=[2,4,6,8,9]
set3=set(lst3)
set4=set(lst4)
SET=set3 - set4
print(SET)